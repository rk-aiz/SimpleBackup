<Window x:Class="SimpleBackup.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:SimpleBackup"
        xmlns:properties="clr-namespace:SimpleBackup.Properties"
        mc:Ignorable="d"
        Title="Simple Backup" Height="500" Width="600"
        ResizeMode="NoResize">
    <Window.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <local:LengthToByteStringConverter x:Key="LengthToByteStringConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />

            <Storyboard x:Key="WaitStoryboard" Timeline.DesiredFrameRate="8">
                <DoubleAnimation
                    Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:1"
                    RepeatBehavior="Forever"/>
            </Storyboard>

        </ResourceDictionary>
        
    </Window.Resources>
    
    <Grid
        x:Name="RootGrid"
        Background="#FFFFFF"
        DataContext="{x:Static local:ViewModel.Instance}"
        MouseDown="RootGrid_MouseDown"
        >

        <Grid.Resources>

            <CollectionViewSource
                x:Key="cvsBackupHistory"
                Source="{Binding BackupHistory}"
                IsLiveSortingRequested="True">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Index" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>

        <!-- バックアップ対象設定 -->
        <Grid
            Grid.Row="0"
            Margin="5, 10, 10, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="330"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>
            <TextBlock
                TextWrapping="NoWrap"
                Text="{x:Static properties:Resources.String_Backup_Source}"
                Margin="5, 0"
                VerticalAlignment="Center"
                TextAlignment="Center"/>
            <local:DirectoryPathTextBox Grid.Column="1"
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding BackupTargetDir}"
                Description="{x:Static properties:Resources.String_Select_Backup_Folder}"
                Selected="DirectoryPathTextBox_Selected"/>

            <StackPanel
                Grid.Row="1" Grid.Column="1"
                Margin="0, 2"
                Orientation="Horizontal">
                <TextBlock
                    Text="{Binding Source={x:Static properties:Resources.String_Contains}, StringFormat={}{0}:}"/>
                <TextBlock
                    Text="{Binding BackupTargetFilesCount, Mode=OneWay, StringFormat={x:Static properties:Resources.StringFormat_Files}}"
                    Margin="10, 0"/>
                <TextBlock
                    Text="{x:Static properties:Resources.String_Size}"
                    Margin="0, 0, 5, 0"/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="BackupTargetTotalLength"
                                 Mode="OneWay"
                                 Converter="{StaticResource LengthToByteStringConverter}"
                                 ConverterParameter="{}{0:N1}"/>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
        </Grid>

        <!-- 保存場所設定 -->
        <Grid Grid.Row="1"
            Margin="5, 0, 10, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="330"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>
            <TextBlock
                TextWrapping="NoWrap"
                Text="{x:Static properties:Resources.String_Save_Location}"
                Width="75"
                Margin="5, 0"
                VerticalAlignment="Center"
                TextAlignment="Center"/>
            <local:DirectoryPathTextBox Grid.Column="1"
                Width="330"
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding SaveDir, UpdateSourceTrigger=PropertyChanged}"
                Description="{x:Static properties:Resources.String_Select_Save_Location}"
                Selected="DirectoryPathTextBox_Selected"/>
        
            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Margin="0, 2"
                Orientation="Horizontal">
                <TextBlock
                    Margin="0, 0, 10, 0"
                    Text="{Binding Source={x:Static properties:Resources.String_Free_Space}, Mode=OneWay, StringFormat={}{0}:}"/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="DestinationDriveAvailableFreeSpace"
                                 Mode="OneWay"
                                 Converter="{StaticResource LengthToByteStringConverter}"
                                 ConverterParameter="{}{0:#,0}"/>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" / "/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="DestinationDriveTotalSize"
                                 Mode="OneWay"
                                 Converter="{StaticResource LengthToByteStringConverter}"
                                 ConverterParameter="{}{0:#,0}"/>
                    </TextBlock.Text>
                </TextBlock>
                <ProgressBar
                    Width="100"
                    Height="8"
                    Margin="10, 0"
                    Minimum="0"
                    Maximum="1"
                    Foreground="#46ACEC"
                    Value="{Binding DriveFreeSpacePercentage, Mode=OneWay}"/>
            </StackPanel>
        </Grid>

        <TabControl x:Name="TabControl"
                    Grid.Row="2"
                    Padding="0"
                    Margin="10, 0, 10, 5">
            <TabItem Header="{x:Static properties:Resources.String_File_Specific_Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Width" Value="100"/>
                                <Setter Property="Height" Value="18"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button
                            Content="{x:Static properties:Resources.String_Check_All}"
                            Click="CheckAllButton_Click"/>
                        <Button
                            Content="{x:Static properties:Resources.String_Uncheck_All}"
                            Click="UncheckAllButton_Click"/>
                        <Button
                            Content="{x:Static properties:Resources.String_Refresh}"
                            Click="RefreshButton_Click"/>
                    </StackPanel>
                    <!-- ファイル個別設定 -->
                    <local:CheckBoxTreeView
                        Grid.Row="1"
                        BorderThickness="0, 1, 0, 0"
                        BorderBrush="#B0B0B0"
                        IsEnabled="{Binding SettingLock,
                            Source={x:Static local:StatusHelper.Instance},
                            Converter={x:Static local:ReverseBooleanConverter.Instance}}"
                        ItemsSource="{Binding CBTSource.Children}"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static properties:Resources.String_Backup_History}">
                <!-- バックアップ履歴 -->
                <ListBox
                    BorderThickness="0"
                    ItemTemplate="{StaticResource BackupHistoryDataTemplate}"
                    ItemsSource="{Binding Source={StaticResource cvsBackupHistory}}"
                    ListBoxItem.MouseDoubleClick="BackupHistoryListBox_MouseDoubleClick"
                    HorizontalContentAlignment="Stretch"/>
            </TabItem>
        </TabControl>

        <!-- 右側設定パネル -->
        <DockPanel
            Grid.Row="0"
            Grid.Column="1"
            Grid.RowSpan="3"
            Margin="0,10"
            LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTipService.ToolTip" Value="{
                                Binding Path=(Validation.Errors)[0].ErrorContent,
                                RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="ToolTip.IsOpen" Value="True"/>
                            <Setter Property="Background" Value="#FF8888"/>
                        </Trigger>
                        <Trigger Property="TextBox.IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="#404040"/>
                            <Setter Property="Background" Value="#D0D0D0"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>

            <Button
                DockPanel.Dock="Top"
                Content="{x:Static properties:Resources.String_Backup_Now}"
                Width="120"
                Margin="5"
                Click="BackupNowButton_Click"
                />

            <GroupBox
                DockPanel.Dock="Top"
                Margin="5"
                Header="{x:Static properties:Resources.String_Scheduled_Backup}">
                <StackPanel>
                    <ToggleButton
                        x:Name="ScheduledBackupButton"
                        DockPanel.Dock="Top"
                        Template="{StaticResource ToggleSlider}"
                        Content="{x:Static properties:Resources.String_Scheduled_Backup}"
                        Width="120"
                        Margin="5"
                        IsChecked="{Binding SchedulerEnabled}"/>

                    <TextBlock
                        DockPanel.Dock="Top"
                        TextWrapping="Wrap"
                        Text="{Binding Source={x:Static properties:Resources.String_Backup_Interval}, StringFormat={}{0}:}"
                        Margin="5"
                        VerticalAlignment="Center"
                        TextAlignment="Center"/>

                    <StackPanel
                        DockPanel.Dock="Top"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                        <TextBox
                            TextWrapping="NoWrap"
                            TextAlignment="Center"
                            InputMethod.IsInputMethodEnabled="False"
                            Width="40"
                            Margin="5"
                            IsReadOnly="{Binding SettingLock, Source={x:Static local:StatusHelper.Instance}}"
                            LostKeyboardFocus="TextBox_LostKeyboardFocus">
                            <TextBox.Text>
                                <Binding Path="BackupInterval"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:PositiveIntegerRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock
                            Text="{x:Static properties:Resources.String_Min}"
                            Margin="5"
                            VerticalAlignment="Center"
                            TextAlignment="Center"/>
                    </StackPanel>

                    <TextBlock
                            DockPanel.Dock="Top"
                            TextWrapping="Wrap"
                            Text="{Binding Source={x:Static properties:Resources.String_Maximum_Number_of_Backups}, StringFormat={}{0}:}"
                            Margin="5"
                            VerticalAlignment="Center"
                            TextAlignment="Center"/>

                    <StackPanel
                            DockPanel.Dock="Top"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                        <TextBox
                            TextWrapping="NoWrap"
                            TextAlignment="Center"
                            InputMethod.IsInputMethodEnabled="False"
                            Width="40"
                            Margin="5"
                            IsReadOnly="{Binding SettingLock, Source={x:Static local:StatusHelper.Instance}}"
                            LostKeyboardFocus="TextBox_LostKeyboardFocus">
                            <TextBox.Text>
                                <Binding Path="MaxBackups"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:PositiveIntegerRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                </StackPanel>
            </GroupBox>

            <TextBlock
                    DockPanel.Dock="Top"
                    TextWrapping="Wrap"
                    Text="{Binding Source={x:Static properties:Resources.String_Backup_Thread_Priority}, StringFormat={}{0}:}"
                    Margin="5"
                    VerticalAlignment="Center"
                    TextAlignment="Center"/>

            <StackPanel
                    DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center">
                <ComboBox
                    ItemsSource="{Binding Source={local:EnumSource {x:Type local:Priority}}}"
                    Width="100"
                    Margin="5"
                    IsReadOnly="{Binding SettingLock,
                        Source={x:Static local:StatusHelper.Instance}}"
                    IsEnabled="{Binding IsReadOnly,
                        RelativeSource={RelativeSource Self}, Converter={x:Static local:ReverseBooleanConverter.Instance}}">
                    <ComboBox.SelectedValue>
                        <Binding Path="Priority"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">
                        </Binding>
                    </ComboBox.SelectedValue>
                    <ComboBox.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="ComboBox.IsEnabled" Value="False">
                                    <Setter Property="TextBox.Foreground" Value="#808080"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>

            <Button
                DockPanel.Dock="Bottom"
                Content="{x:Static properties:Resources.String_Open_Save_Location}"
                Width="120"
                Margin="5"
                Click="OpenSaveDirButton_Click"/>
            <Button
                DockPanel.Dock="Bottom"
                Content="{x:Static properties:Resources.String_Open_Backup_Source_Folder}"
                Width="120"
                Margin="5"
                Click="OpenTargetDirButton_Click"/>

        </DockPanel>

        <StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2"
            >
            <TextBlock
                Padding="0"
                Margin="5, 0"
                Text="{Binding Message, Source={x:Static local:StatusHelper.Instance}}"/>
            <TextBlock
                x:Name="Wait"
                Foreground="#4090D0"
                FontFamily="Segoe MDL2 Assets"
                FontSize="20"
                Text="&#xF16A;"
                RenderTransformOrigin="0.5, 0.5"
                Margin="5, 0"
                Visibility="{Binding ProgressStatus,
                    Source={x:Static local:StatusHelper.Instance},
                    Converter={StaticResource BoolVisibilityConverter}}">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressStatus, Source={x:Static local:StatusHelper.Instance}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource WaitStoryboard}" Name="bsb"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="bsb"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBar>

    </Grid>
</Window>
