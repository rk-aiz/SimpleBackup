<Window x:Class="SimpleBackup.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        xmlns:local="clr-namespace:SimpleBackup"
        xmlns:properties="clr-namespace:SimpleBackup.Properties"
        mc:Ignorable="d"
        Title="Simple Backup" Height="450" Width="600"
        ResizeMode="NoResize">
    <Window.Resources>
        
        <local:IndexConverter x:Key="IndexConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />

        <Storyboard x:Key="WaitStoryboard" Timeline.DesiredFrameRate="8">
            <DoubleAnimation
                Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                From="0"
                To="360"
                Duration="0:0:1"
                RepeatBehavior="Forever"/>
        </Storyboard>

        <Geometry x:Key="ErrorPathIcon">
            M 50,-10 A 60,60 180 1 1 50,110 A 60,60 180 1 1 50,-10 Z
            M 25,15 L 50,41 L 75,15 L 85,25 L 59,50
            L 85,75 L 75,85 L 50,59 L 25,85 L 15,75
            L 41,50 L 15,25 Z
        </Geometry>

        <Geometry x:Key="CompletePathIcon">
            M 50,-10 A 60,60 180 1 1 50,110 A 60,60 180 1 1 50,-10 Z
            M 15,49 L 40,68  L 83,31 L 95,43 L 40,88
            L 5,60 Z
        </Geometry>

        <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#3090F0"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <Border Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator"
                                ClipToBounds="true"
                                HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    
    <Grid
        x:Name="RootGrid"
        Background="#FFFFFF"
        DataContext="{x:Static local:ViewModel.Instance}"
        MouseDown="RootGrid_MouseDown"
        >

        <Grid.Resources>

            <CollectionViewSource
                x:Key="cvsBackupHistory"
                Source="{Binding BackupHistory}"
                IsLiveSortingRequested="True">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Index" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <DataTemplate x:Key="BackupHistoryDataTemplate">
                <Grid HorizontalAlignment="Stretch">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding InSequence}" Value="False">
                                        <Setter
                                    Property="TextBlock.Foreground"
                                    Value="#909090" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <TextBlock x:Name="index"
                        Grid.RowSpan="2" Grid.Column="0"
                        FontSize="18"
                        Text="{Binding Index, Converter={StaticResource IndexConverter}}"/>
                        <TextBlock x:Name="saveTime"
                            Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1"
                            FontSize="12"
                            Visibility="Hidden"
                            Text="{Binding SaveTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}"/>
                        <TextBlock
                            Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="1"
                            FontSize="16"
                            HorizontalAlignment="Stretch"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                            Text="{Binding FileName}" TextTrimming="CharacterEllipsis" />
                    </Grid>
                    <ProgressBar x:Name="progress"
                        Value="{Binding Progress}"
                        Style="{StaticResource ProgressBarStyle}"
                        VerticalAlignment="Top"
                        Margin="2"
                        Visibility="Collapsed"/>
                    <Path x:Name="statusIcon"
                        HorizontalAlignment="Right"
                        Width="12" Height="12"
                        Margin="10, 0"
                        Stretch="Fill"
                        Visibility="Collapsed" Data="" />
                    <Button Name="cancelButton" Visibility="Collapsed" Click="CancelButton_Click"
                        HorizontalAlignment="Right" Margin="2"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Name="Border" Background="#80FFFFFF"
                                                Width="75" Height="24" CornerRadius="12">
                                                <TextBlock Name="Label"
                                                    Width="75" Height="16"
                                                    FontSize="14"
                                                    TextAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontWeight="UltraBold"
                                                    Foreground="#FF3010"
                                                    Text="Cancel" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="#D5FFFFFF" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                        <Condition Property="IsMouseCaptured" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="Label" Property="Foreground" Value="#B03000" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}"
                                Value="True"/>
                            <Condition Binding="{Binding Status}" Value="{x:Static local:BackupTaskStatus.Processing}"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="cancelButton" Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding InSequence}" Value="False">
                        <Setter TargetName="index"
                            Property="TextBlock.Visibility"
                            Value="Hidden" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static local:BackupTaskStatus.Processing}">
                        <Setter TargetName="progress" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static local:BackupTaskStatus.Failed}">
                        <Setter TargetName="statusIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="statusIcon" Property="Fill" Value="Red" />
                        <Setter TargetName="statusIcon" Property="Data" Value="{StaticResource ErrorPathIcon}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="{x:Static local:BackupTaskStatus.Completed}">
                        <Setter TargetName="statusIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="statusIcon" Property="Fill" Value="#30E050" />
                        <Setter TargetName="statusIcon" Property="Data" Value="{StaticResource CompletePathIcon}" />
                        <Setter TargetName="saveTime" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="DirectoryPathTextBox" TargetType="{x:Type local:DirectoryPathTextBox}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <EventSetter Event="Selected" Handler="DirectoryPathTextBox_Selected"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ToolTip.IsOpen" Value="True"/>
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTipService.ToolTip" Value="{
                                Binding Path=(Validation.Errors)[0].ErrorContent,
                                RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="ToolTip.IsOpen" Value="True"/>
                        <Setter Property="Background" Value="#FF8888"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding SchedulerEnabled}" Value="true">
                        <Setter Property="Foreground" Value="#404040"/>
                        <Setter Property="Background" Value="#D0D0D0"/>
                        <Setter Property="Cursor" Value="Arrow"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Margin="5"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <TextBlock
                TextWrapping="NoWrap"
                Text="{x:Static properties:Resources.String_Backup_Source}"
                Margin="5, 0"
                VerticalAlignment="Center"
                TextAlignment="Center"/>
            <local:DirectoryPathTextBox
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding BackupTargetDir}"
                Description="{x:Static properties:Resources.String_Select_Backup_Folder}"
                Width="330"
                Margin="5, 0"/>
        </StackPanel>
        <StackPanel
            Grid.Row="1"
            Margin="5"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <TextBlock
                TextWrapping="NoWrap"
                Text="{x:Static properties:Resources.String_Save_Location}"
                Width="75"
                Margin="5, 0"
                VerticalAlignment="Center"
                TextAlignment="Center"/>
            <local:DirectoryPathTextBox
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding SaveDir, UpdateSourceTrigger=PropertyChanged}"
                Description="{x:Static properties:Resources.String_Select_Save_Location}"
                Width="330"
                Margin="5, 0"/>

        </StackPanel>

        <ListBox Grid.Row="2" Margin="10, 5"
                 ItemTemplate="{StaticResource BackupHistoryDataTemplate}"
                 ItemsSource="{Binding Source={StaticResource cvsBackupHistory}}"
                 ListBoxItem.MouseDoubleClick="BackupHistoryListBox_MouseDoubleClick"
                 HorizontalContentAlignment="Stretch"/>

        <DockPanel
            Grid.Row="0"
            Grid.Column="1"
            Grid.RowSpan="3"
            Margin="0,10"
            LastChildFill="False"
            >
            <DockPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTipService.ToolTip" Value="{
                                Binding Path=(Validation.Errors)[0].ErrorContent,
                                RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="ToolTip.IsOpen" Value="True"/>
                            <Setter Property="Background" Value="#FF8888"/>
                        </Trigger>
                        <Trigger Property="TextBox.IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="#404040"/>
                            <Setter Property="Background" Value="#D0D0D0"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            
            <Button
                DockPanel.Dock="Top"
                Content="{x:Static properties:Resources.String_Backup_Now}"
                Width="120"
                Margin="5"
                Click="BackupNowButton_Click"
                />

            <ToggleButton
                x:Name="ScheduledBackupButton"
                DockPanel.Dock="Top"
                Content="{x:Static properties:Resources.String_Scheduled_Backup}"
                Width="120"
                Margin="5"
                IsChecked="{Binding SchedulerEnabled}"
                />

            <TextBlock
                DockPanel.Dock="Top"
                TextWrapping="Wrap"
                Text="{Binding Source={x:Static properties:Resources.String_Backup_Interval}, StringFormat={}{0}:}"
                Margin="5"
                VerticalAlignment="Center"
                TextAlignment="Center"/>

            <StackPanel
                DockPanel.Dock="Top"
                Orientation="Horizontal"
                HorizontalAlignment="Center"
                >
                <TextBox
                    TextWrapping="NoWrap"
                    TextAlignment="Center"
                    InputMethod.IsInputMethodEnabled="False"
                    Width="40"
                    Margin="5"
                    IsReadOnly="{Binding SchedulerEnabled}"
                    LostKeyboardFocus="TextBox_LostKeyboardFocus">
                    <TextBox.Text>
                        <Binding Path="BackupInterval"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:PositiveIntegerRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock
                    Text="{x:Static properties:Resources.String_Min}"
                    Margin="5"
                    VerticalAlignment="Center"
                    TextAlignment="Center"/>
            </StackPanel>

            <TextBlock
                DockPanel.Dock="Top"
                TextWrapping="Wrap"
                Text="{Binding Source={x:Static properties:Resources.String_Maximum_Number_of_Backups}, StringFormat={}{0}:}"
                Margin="5"
                VerticalAlignment="Center"
                TextAlignment="Center"/>

            <StackPanel
                DockPanel.Dock="Top"
                Orientation="Horizontal"
                HorizontalAlignment="Center"
                >
                <TextBox
                    TextWrapping="NoWrap"
                    TextAlignment="Center"
                    InputMethod.IsInputMethodEnabled="False"
                    Width="40"
                    Margin="5"
                    IsReadOnly="{Binding SchedulerEnabled}"
                    LostKeyboardFocus="TextBox_LostKeyboardFocus">
                    <TextBox.Text>
                        <Binding Path="MaxBackups"
                                             Mode="TwoWay"
                                             UpdateSourceTrigger="PropertyChanged"
                                             >
                            <Binding.ValidationRules>
                                <local:PositiveIntegerRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>

            <Button
                DockPanel.Dock="Bottom"
                Content="{x:Static properties:Resources.String_Open_Save_Location}"
                Width="120"
                Margin="5"
                Click="OpenSaveDirButton_Click"
                />
            <Button
                DockPanel.Dock="Bottom"
                Content="{x:Static properties:Resources.String_Open_Backup_Source_Folder}"
                Width="120"
                Margin="5"
                Click="OpenTargetDirButton_Click"/>

        </DockPanel>

        <StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2"
            >
            <TextBlock
                Padding="0"
                Margin="5, 0"
                Text="{Binding Message, Source={x:Static local:StatusHelper.Instance}}"/>
            <TextBlock
                x:Name="Wait"
                Foreground="#4090D0"
                FontFamily="Segoe MDL2 Assets"
                FontSize="20"
                Text="&#xF16A;"
                RenderTransformOrigin="0.5, 0.5"
                Margin="5, 0"
                Visibility="{Binding ProgressStatus,
                    Source={x:Static local:StatusHelper.Instance},
                    Converter={StaticResource BoolVisibilityConverter}}">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressStatus, Source={x:Static local:StatusHelper.Instance}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource WaitStoryboard}" Name="bsb"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="bsb"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBar>

    </Grid>
</Window>
