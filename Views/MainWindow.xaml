<Window x:Class="SimpleBackup.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:SimpleBackup"
        xmlns:views="clr-namespace:SimpleBackup.Views"
        xmlns:controls="clr-namespace:SimpleBackup.Controls"
        xmlns:helpers="clr-namespace:SimpleBackup.Helpers"
        xmlns:converters="clr-namespace:SimpleBackup.Converters"
        mc:Ignorable="d"
        Title="Simple Backup"
        Height="500" Width="600"
        MinHeight="160" MinWidth="165"
        ResizeMode="CanResize">
    <Window.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Storyboard x:Key="WaitStoryboard" Timeline.DesiredFrameRate="8">
                <DoubleAnimation
                    Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:1"
                    RepeatBehavior="Forever"/>
            </Storyboard>

        </ResourceDictionary>


    </Window.Resources>
    
    <Grid
        x:Name="RootGrid"
        Background="Transparent"
        DataContext="{x:Static local:ViewModel.Instance}"
        MouseDown="RootGrid_MouseDown">

        <Grid.Resources>

            <CollectionViewSource
                x:Key="cvsBackupHistory"
                Source="{Binding BackupHistory}"
                IsLiveSortingRequested="True">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Index" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTipService.ToolTip" Value="{
                                Binding Path=(Validation.Errors)[0].ErrorContent,
                                RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="ToolTip.IsOpen" Value="True"/>
                        <Setter Property="Background" Value="#FF8888"/>
                    </Trigger>
                    <Trigger Property="TextBox.IsReadOnly" Value="true">
                        <Setter Property="Foreground" Value="#404040"/>
                        <Setter Property="Background" Value="#D0D0D0"/>
                        <Setter Property="Cursor" Value="Arrow"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>

        <!-- パス設定 -->
        <Grid
            Grid.Row="0"
            Margin="5, 10, 10, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="75"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="TextWrapping" Value="NoWrap"/>
                </Style>
            </Grid.Resources>

            <!-- バックアップ対象設定 -->
            <TextBlock
                Grid.Column="0"
                Margin="5, 0"
                Text="{local:CultureAwareBinding Key=String_Backup_Source}"
                TextAlignment="Center"/>
            <controls:DirectoryPathTextBox
                Grid.Column="1"
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding BackupTargetDir}"
                Description="{local:CultureAwareBinding Key=String_Select_Backup_Folder}"
                Selected="DirectoryPathTextBox_Selected"/>

            <!-- バックアップ対象内容 -->
            <StackPanel
                Grid.Row="1" Grid.Column="1"
                Margin="0, 2"
                Orientation="Horizontal">
                <TextBlock
                    Text="{local:CultureAwareBinding Key=String_Contains, StringFormat={}{0}:}"/>
                <controls:FormattedTextBlock
                    Text="{Binding BackupTargetFilesCount, Mode=OneWay}"
                    TextStringFormat="{local:CultureAwareBinding Key=FormatString_Files}"
                    Margin="10, 0"/>
                <TextBlock
                    Text="{local:CultureAwareBinding Key=String_Size}"
                    Margin="0, 0, 5, 0"/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="BackupTargetTotalLength"
                                 Mode="OneWay"
                                 Converter="{x:Static converters:LengthToByteStringConverter.Instance}"
                                 ConverterParameter="{}{0:N1}"/>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>

            <!-- 保存場所設定 -->
            <TextBlock
                Grid.Row="3"
                Text="{local:CultureAwareBinding Key=String_Save_Location}"
                TextAlignment="Center"/>
            <controls:DirectoryPathTextBox
                Grid.Row="3" Grid.Column="1"
                Style="{StaticResource DirectoryPathTextBox}"
                Text="{Binding SaveDir, UpdateSourceTrigger=PropertyChanged}"
                Description="{local:CultureAwareBinding Key=String_Select_Save_Location}"
                Selected="DirectoryPathTextBox_Selected"/>

            <!-- 保存場所ドライブ容量 -->
            <StackPanel
                Grid.Row="4" Grid.Column="1"
                Margin="0, 2"
                Orientation="Horizontal">
                <TextBlock
                    Margin="0, 0, 10, 0"
                    Text="{local:CultureAwareBinding Key=String_Free_Space, Mode=OneWay, StringFormat={}{0}:}"/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="DestinationDriveAvailableFreeSpace"
                                 Mode="OneWay"
                                 Converter="{x:Static converters:LengthToByteStringConverter.Instance}"/>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" / "/>
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="DestinationDriveTotalSize"
                                 Mode="OneWay"
                                 Converter="{x:Static converters:LengthToByteStringConverter.Instance}"/>
                    </TextBlock.Text>
                </TextBlock>
                <ProgressBar
                    Width="100"
                    Height="8"
                    Margin="10, 0"
                    Minimum="0"
                    Maximum="1"
                    Foreground="#46ACEC"
                    Value="{Binding DriveFreeSpacePercentage, Mode=OneWay}"/>
            </StackPanel>
        </Grid>

        <TabControl x:Name="TabControl"
                    Grid.Row="1"
                    Padding="0"
                    Margin="10, 0, 10, 5">
            <TabItem Header="{local:CultureAwareBinding Key=String_File_Specific_Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border
                        BorderThickness="0, 0, 0, 1"
                        BorderBrush="#B0B0B0">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Width" Value="100"/>
                                    <Setter Property="Height" Value="18"/>
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </StackPanel.Resources>
                            <Button
                            Content="{local:CultureAwareBinding Key=String_Check_All}"
                            IsEnabled="{Binding SettingLock,
                                Source={x:Static helpers:StatusHelper.Instance},
                                Converter={x:Static converters:ReverseBooleanConverter.Instance}}"
                            Click="CheckAllButton_Click"/>
                            <Button
                            Content="{local:CultureAwareBinding Key=String_Uncheck_All}"
                            IsEnabled="{Binding SettingLock,
                                Source={x:Static helpers:StatusHelper.Instance},
                                Converter={x:Static converters:ReverseBooleanConverter.Instance}}"
                            Click="UncheckAllButton_Click"/>
                            <Button
                            Content="{local:CultureAwareBinding Key=String_Refresh}"
                            IsEnabled="{Binding SettingLock,
                                Source={x:Static helpers:StatusHelper.Instance},
                                Converter={x:Static converters:ReverseBooleanConverter.Instance}}"
                            Click="RefreshButton_Click"/>
                        </StackPanel>
                    </Border>
                    <!-- ファイル個別設定 -->

                    <ScrollViewer
                        Grid.Row="1"
                        x:Name="FileSpecificSettingsScrollViewer"
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Visible">
                        <views:CheckBoxTreeView
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            BorderBrush="{x:Null}"
                            BorderThickness="0"
                            IsEnabled="{Binding SettingLock,
                                Source={x:Static helpers:StatusHelper.Instance},
                                Converter={x:Static converters:ReverseBooleanConverter.Instance}}"
                            ItemsSource="{Binding CBTSource.Children}"/>
                    </ScrollViewer>
                </Grid>
            </TabItem>

            <TabItem Header="{local:CultureAwareBinding Key=String_Backup_History}">
                <!-- バックアップ履歴 -->
                <ListBox
                    BorderThickness="0"
                    ItemTemplate="{StaticResource BackupHistoryDataTemplate}"
                    ItemsSource="{Binding Source={StaticResource cvsBackupHistory}}"
                    ListBoxItem.MouseDoubleClick="BackupHistoryListBox_MouseDoubleClick"
                    HorizontalContentAlignment="Stretch"/>
            </TabItem>
        </TabControl>

        <!-- 右側設定パネル -->
        <DockPanel
            Grid.Row="0"
            Grid.Column="1"
            Grid.RowSpan="2"
            Margin="0, 5"
            LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </DockPanel.Resources>

            <!-- 今すぐバックアップボタン -->
            <Button
                DockPanel.Dock="Top"
                Content="{local:CultureAwareBinding Key=String_Backup_Now}"
                Width="120"
                Margin="5"
                Click="BackupNowButton_Click"
                />

            <!-- 定期バックアップ -->
            <GroupBox
                DockPanel.Dock="Top"
                Margin="5"
                Header="{local:CultureAwareBinding Key=String_Scheduled_Backup}">
                <StackPanel>
                    <ToggleButton
                        x:Name="ScheduledBackupButton"
                        DockPanel.Dock="Top"
                        Template="{StaticResource ToggleSlider}"
                        Width="120"
                        Margin="5"
                        IsChecked="{Binding SchedulerEnabled}">
                        <ToggleButton.Content>
                            <TextBlock
                                helpers:UpdateService.TextUpdater="{x:Static helpers:LocalizeHelper.Instance}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Text="{Binding IsChecked,
                                    ElementName=ScheduledBackupButton,
                                    Converter={StaticResource BooleanToEnumConverter},
                                    ConverterParameter={x:Type local:ToggleStateMessage}}"/>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <!-- 定期バックアップ間隔 -->
                    <TextBlock
                        DockPanel.Dock="Top"
                        Text="{local:CultureAwareBinding Key=String_Backup_Interval, StringFormat={}{0}:}"
                        Margin="5"/>
                    <StackPanel
                        DockPanel.Dock="Top"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                        <TextBox
                            TextWrapping="NoWrap"
                            InputMethod.IsInputMethodEnabled="False"
                            Width="40"
                            Margin="5"
                            IsReadOnly="{Binding SettingLock, Source={x:Static helpers:StatusHelper.Instance}}"
                            LostKeyboardFocus="TextBox_LostKeyboardFocus">
                            <TextBox.Text>
                                <Binding Path="BackupInterval"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:PositiveIntegerRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock
                            Text="{local:CultureAwareBinding Key=String_Min}"
                            Margin="5"/>
                    </StackPanel>

                    <!-- 最大バックアップ保存数 -->
                    <TextBlock
                            DockPanel.Dock="Top"
                            Text="{local:CultureAwareBinding Key=String_Maximum_Number_of_Backups, StringFormat={}{0}:}"
                            Margin="5"/>
                    <StackPanel
                            DockPanel.Dock="Top"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                        <TextBox
                            TextWrapping="NoWrap"
                            InputMethod.IsInputMethodEnabled="False"
                            Width="40"
                            Margin="5"
                            IsReadOnly="{Binding SettingLock, Source={x:Static helpers:StatusHelper.Instance}}"
                            LostKeyboardFocus="TextBox_LostKeyboardFocus">
                            <TextBox.Text>
                                <Binding Path="MaxBackups"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:PositiveIntegerRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                </StackPanel>
            </GroupBox>

            <!-- バックアップ処理スレッド優先度 -->
            <TextBlock
                    DockPanel.Dock="Top"
                    Text="{local:CultureAwareBinding Key=String_Backup_Thread_Priority, StringFormat={}{0}:}"
                    Margin="5"/>
            <StackPanel
                    DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center">

                <ComboBox
                    ItemsSource="{local:EnumTypeSourceBinding {x:Type local:Priority}}"
                    helpers:UpdateService.ItemsSourceUpdater="{x:Static helpers:LocalizeHelper.Instance}"
                    Width="120"
                    Margin="5"
                    IsReadOnly="{Binding SettingLock,
                        Source={x:Static helpers:StatusHelper.Instance}}"
                    IsEnabled="{Binding IsReadOnly,
                        RelativeSource={RelativeSource Self}, Converter={x:Static converters:ReverseBooleanConverter.Instance}}"
                    SelectedValue="{Binding Path=Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    >
                    <ComboBox.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="ComboBox.IsEnabled" Value="False">
                                    <Setter Property="TextBox.Foreground" Value="#808080"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>

            <Button
                DockPanel.Dock="Bottom"
                Content="{local:CultureAwareBinding Key=String_Open_Save_Location}"
                Width="120"
                Margin="5"
                Click="OpenSaveDirButton_Click"/>
            <Button
                DockPanel.Dock="Bottom"
                Content="{local:CultureAwareBinding Key=String_Open_Backup_Source_Folder}"
                Width="120"
                Margin="5"
                Click="OpenTargetDirButton_Click"/>

        </DockPanel>

        <!-- 設定画面 -->
        <StackPanel
            x:Name="OptionPanel"
            Grid.RowSpan="2" Grid.ColumnSpan="2"
            TextElement.FontSize="15"
            Background="#FFFFFF"
            Visibility="{Binding IsChecked, ElementName=SettingPanelButton, Converter={StaticResource BoolVisibilityConverter}}"
            MouseDown="OptionPanel_MouseDown">
            <StackPanel.Resources>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="Margin" Value="20, 5"/>
                </Style>

                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="10, 0"/>
                </Style>
            </StackPanel.Resources>
            <GroupBox
                Header="{local:CultureAwareBinding Key=String_App_Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    
                    <!-- 言語設定 -->
                    <TextBlock
                        Grid.Row="0"
                        Text="{local:CultureAwareBinding Key=String_Language}"/>
                    <ComboBox
                        Grid.Row="0" Grid.Column="1"
                        ItemsSource="{Binding CultureCollection, Source={x:Static helpers:LocalizeHelper.Instance}}"
                        Margin="8">
                        <ComboBox.SelectedValue>
                            <Binding
                                Path="UICulture"
                                Source="{x:Static helpers:LocalizeHelper.Instance}"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">
                            </Binding>
                        </ComboBox.SelectedValue>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="10, 0"
                                    Text="{Binding NativeName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBlock
                        Grid.Row="1"
                        Text="{local:CultureAwareBinding Key=String_App_Startup_Mode}"/>
                    <ComboBox
                        Grid.Row="1" Grid.Column="1"
                        helpers:UpdateService.ItemsSourceUpdater="{x:Static helpers:LocalizeHelper.Instance}"
                        ItemsSource="{local:EnumTypeSourceBinding {x:Type local:TaskTrayMode}}"
                        Margin="8">
                        <ComboBox.SelectedValue>
                            <Binding
                                Path="TaskTrayMode"
                                Source="{x:Static local:TaskTray.Instance}"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">
                            </Binding>
                        </ComboBox.SelectedValue>
                    </ComboBox>
                </Grid>
            </GroupBox>

            <GroupBox
                Header="{local:CultureAwareBinding Key=String_Backup_Settings}">
                <StackPanel
                    HorizontalAlignment="Center"
                    Margin="10">
                    <CheckBox
                        x:Name="TargetSizeValidCheckBox"
                        IsChecked="{Binding TargetSizeValidation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalContentAlignment="Center">
                        <TextBlock
                            Margin="0"
                            Text="{local:CultureAwareBinding Key=String_Backup_Target_Size_Confirm, StringFormat={}{0} :}"/>
                    </CheckBox>
                    <StackPanel
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="10">
                        <TextBox
                            IsEnabled="{Binding IsChecked, ElementName=TargetSizeValidCheckBox}"
                            TextAlignment="Right"
                            Width="60"
                            TextWrapping="NoWrap"
                            InputMethod.IsInputMethodEnabled="False"
                            LostKeyboardFocus="TextBox_LostKeyboardFocus">
                            <TextBox.Text>
                                <Binding Path="ThreatholdLength"
                                         Converter="{x:Static converters:LengthToGigaByteConverter.Instance}"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:PositiveNumberRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Text="GB"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        
        <StatusBar
            Grid.Row="3"
            Grid.ColumnSpan="2">
            <TextBlock
                Padding="0"
                Margin="5, 0"
                Text="{Binding Message, Source={x:Static helpers:StatusHelper.Instance}}"/>
            <TextBlock
                x:Name="Wait"
                Foreground="#4090D0"
                FontFamily="Segoe MDL2 Assets"
                FontSize="20"
                Text="&#xF16A;"
                RenderTransformOrigin="0.5, 0.5"
                Margin="5, 0"
                Visibility="{Binding ProgressStatus,
                    Source={x:Static helpers:StatusHelper.Instance},
                    Converter={StaticResource BoolVisibilityConverter}}">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressStatus, Source={x:Static helpers:StatusHelper.Instance}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource WaitStoryboard}" Name="bsb"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="bsb"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </StatusBar>

        <ToggleButton
            x:Name="SettingPanelButton"
            Style="{StaticResource SettingPanelButtonStyle}"
            Grid.Column="1"
            Grid.Row="2"
            HorizontalAlignment="Right"
            Content="{local:CultureAwareBinding Key=String_Settings}"
            >
        </ToggleButton>

    </Grid>
</Window>
